{"version":3,"sources":["../../test/memoryfs.js"],"names":["describe","it","root","__dirname","fs","MemoryFs","assert","equal","readFileSync","path","resolve"],"mappings":";;AAAA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,UAAT,EAAqB,YAAM;AACzBC,KAAG,QAAH,EAAa,YAAM;AACjB,QAAMC,OAAOC,SAAb;AACA,QAAMC,KAAK,IAAIC,kBAAJ,CAAaH,IAAb,EAAmB;AAC5B,iBAAW;AADiB,KAAnB,CAAX;AAGAI,qBAAOC,KAAP,CAAaH,GAAGI,YAAH,CAAmBN,IAAnB,cAAb,EAAiD,KAAjD;AACD,GAND;AAOAD,KAAG,eAAH,EAAoB,YAAM;AACxB,QAAMC,OAAOO,eAAKC,OAAL,CAAgBP,SAAhB,UAAb;AACA,QAAMC,KAAK,IAAIC,kBAAJ,CAAaH,IAAb,EAAmB;AAC5B,iBAAW;AADiB,KAAnB,CAAX;AAGAI,qBAAOC,KAAP,CAAaH,GAAGI,YAAH,CAAgB,YAAhB,CAAb,EAA4C,KAA5C;AACD,GAND;AAOD,CAfD","file":"memoryfs.js","sourcesContent":["import { MemoryFs } from '../src/memoryfs';\r\nimport path from 'path';\r\nimport assert from 'assert';\r\n\r\ndescribe('memoryfs', () => {\r\n  it('simple', () => {\r\n    const root = __dirname;\r\n    const fs = new MemoryFs(root, {\r\n      'foo.txt': 'bar',\r\n    });\r\n    assert.equal(fs.readFileSync(`${root}/foo.txt`), 'bar');\r\n  });\r\n  it('relative path', () => {\r\n    const root = path.resolve(`${__dirname}/../`);\r\n    const fs = new MemoryFs(root, {\r\n      'foo.txt': 'bar',\r\n    });\r\n    assert.equal(fs.readFileSync('../foo.txt'), 'bar');\r\n  });\r\n});\r\n"]}